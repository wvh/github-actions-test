name: Release

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    env:
      IMAGE: wvh/github-actions-test
      IMAGE_URL: "ghcr.io/${{ github.repository }}"
    permissions:
      contents: read
      packages: write
    steps:
      - name: Print env
        run: |
          set -exuo pipefail
          env

      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Gather build metadata
        id: meta
        run: |
          BRANCH=${GITHUB_REF##*/}
          REVISION=${GITHUB_SHA::8}
          TS=$(date +%s)
          BUILD_ID="${BRANCH}-${REVISION}-${TS}"
          BUILD_RUN="${GITHUB_RUN_ID}.${GITHUB_RUN_ATTEMPT}"
          LATEST_ID=$BRANCH
          SEMVER=""
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            SEMVER=${GITHUB_REF/refs\/tags\//}
            BUILD_ID=$SEMVER
            LATEST_ID=latest
          fi
          echo BRANCH=${BRANCH} >> $GITHUB_OUTPUT
          echo REVISION=${REVISION} >> $GITHUB_OUTPUT
          echo BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') >> $GITHUB_OUTPUT
          echo BUILD_ID=${BUILD_ID} >> $GITHUB_OUTPUT
          echo SEMVER=${SEMVER} >> $GITHUB_OUTPUT
          echo LATEST_ID=${LATEST_ID} >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ env.IMAGE_URL }}:${{ steps.meta.outputs.BUILD_ID }}
            ${{ env.IMAGE_URL }}:${{ steps.meta.outputs.LATEST_ID }}
          labels: |
            maintainer=Montel Intergalactic
            org.opencontainers.image.title=Test
            org.opencontainers.image.description=GitHub Actions test build
            org.opencontainers.image.vendor=WVH
            org.opencontainers.image.url=${{ github.repositoryUrl }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.version=${{ steps.meta.outputs.SEMVER }}
            org.opencontainers.image.created=${{ steps.meta.outputs.BUILD_DATE }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=WTFPL v2

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
